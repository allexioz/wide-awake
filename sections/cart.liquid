{% comment %}
  Enhanced cart section with 2025 UX best practices
  - Clear visual hierarchy and product information  
  - Transparent pricing with shipping calculator
  - Save for later functionality
  - Trust indicators and social proof
  - Mobile-optimized design
  - One-click actions and shortcuts
{% endcomment %}

<section class="cart-page" data-cart-total="{{ cart.total_price }}" data-section-type="cart" data-section-id="{{ section.id }}" id="main-cart-section">
  <div class="container">
    {% if cart.item_count == 0 %}
      <!-- Empty Cart State -->
      <div class="empty-cart">
        <div class="empty-cart-content">
          <div class="empty-cart-icon">
            <i data-lucide="shopping-cart" class="cart-icon"></i>
          </div>
          <h1 class="empty-cart-title">Your cart is empty</h1>
          <p class="empty-cart-message">Looks like you haven't added any coffee to your cart yet. Let's find some amazing beans for you!</p>
          <div class="empty-cart-actions">
            <a href="{{ collections.all.url }}" class="btn-primary">
              <i data-lucide="coffee" class="btn-icon"></i>
              Explore Coffee
            </a>
            <a href="{{ collections.bundles.url | default: collections.all.url }}" class="btn-secondary">
              <i data-lucide="gift" class="btn-icon"></i>
              View Bundles
            </a>
          </div>
        </div>
        
                 <!-- Recommended Products for Empty Cart -->
         {% assign popular_products = collections.all.products | sort: 'best-selling' %}
         {% if popular_products.size > 0 %}
           <div class="empty-cart-recommendations">
             <h2>Popular Picks</h2>
             <div class="recommendations-grid">
               {% for product in popular_products limit: 3 %}
                 <div class="recommendation-card">
                   <a href="{{ product.url }}" class="recommendation-link">
                     <div class="recommendation-image">
                                               <img src="{{ product.featured_image | image_url: width: 300, height: 300 }}"
                             alt="{{ product.title }}"
                             width="300"
                             height="300"
                             loading="lazy">
                     </div>
                     <h3 class="recommendation-title">{{ product.title }}</h3>
                     <div class="recommendation-price">{{ product.price | money }}</div>
                   </a>
                 </div>
               {% endfor %}
             </div>
           </div>
         {% endif %}
      </div>
    {% else %}
      <!-- Cart with Items -->
      <div class="cart-with-items">
        <!-- Cart Header -->
        <div class="cart-header">
          <h1 class="cart-title">
            Shopping Cart
            <span class="cart-count">({{ cart.item_count }} {{ cart.item_count | pluralize: 'item', 'items' }})</span>
          </h1>
          <div class="cart-actions">
            <button class="btn-link save-cart-btn" data-action="save-cart">
              <i data-lucide="bookmark" class="btn-icon"></i>
              Save Cart
            </button>
            <button class="btn-link clear-cart-btn" data-action="clear-cart">
              <i data-lucide="trash-2" class="btn-icon"></i>
              Clear Cart
            </button>
          </div>
        </div>

        <div class="cart-layout">
          <!-- Cart Items Section -->
          <div class="cart-items-section">
            <form action="{{ routes.cart_url }}" method="post" class="cart-form" id="cart-form" novalidate>
              <div class="cart-items">
                {% for item in cart.items %}
                  <div class="cart-item" data-variant-id="{{ item.variant.id }}" data-line="{{ forloop.index }}">
                    <!-- Product Image -->
                    <div class="cart-item-image">
                      <a href="{{ item.product.url }}">
                                                 <img src="{{ item.image | image_url: width: 200, height: 200 }}"
                              alt="{{ item.product.title }}"
                              width="200"
                              height="200"
                              loading="lazy">
                      </a>
                    </div>

                    <!-- Product Details -->
                    <div class="cart-item-details">
                      <div class="cart-item-header">
                        <h3 class="cart-item-title">
                          <a href="{{ item.product.url }}">{{ item.product.title }}</a>
                        </h3>
                        <button type="button" 
                                class="cart-item-remove" 
                                data-action="remove-item"
                                data-line="{{ forloop.index }}"
                                aria-label="Remove {{ item.product.title }}">
                          <i data-lucide="x" class="remove-icon"></i>
                        </button>
                      </div>

                      {% if item.variant.title != 'Default Title' %}
                        <div class="cart-item-variant">{{ item.variant.title }}</div>
                      {% endif %}

                      {% if item.properties.size > 0 %}
                        <div class="cart-item-properties">
                          {% for property in item.properties %}
                            {% unless property.last == blank %}
                              <div class="cart-item-property">
                                <strong>{{ property.first }}:</strong> {{ property.last }}
                              </div>
                            {% endunless %}
                          {% endfor %}
                        </div>
                      {% endif %}

                      <!-- Quantity and Pricing -->
                      <div class="cart-item-controls">
                        <div class="quantity-controls">
                          <button type="button" 
                                  class="quantity-btn quantity-decrease"
                                  data-action="decrease-quantity"
                                  data-line="{{ forloop.index }}"
                                  aria-label="Decrease quantity">
                            <i data-lucide="minus" class="quantity-icon"></i>
                            <span class="quantity-fallback">−</span>
                          </button>
                          <input type="number" 
                                 name="updates[]" 
                                 class="quantity-input"
                                 value="{{ item.quantity }}"
                                 min="0"
                                 data-line="{{ forloop.index }}"
                                 aria-label="Quantity for {{ item.product.title }}">
                          <button type="button" 
                                  class="quantity-btn quantity-increase"
                                  data-action="increase-quantity"
                                  data-line="{{ forloop.index }}"
                                  aria-label="Increase quantity">
                            <i data-lucide="plus" class="quantity-icon"></i>
                            <span class="quantity-fallback">+</span>
                          </button>
                        </div>

                        <div class="cart-item-pricing">
                          <div class="cart-item-price">
                            {% if item.original_line_price > item.final_line_price %}
                              <span class="price-sale">{{ item.final_line_price | money }}</span>
                              <span class="price-compare">{{ item.original_line_price | money }}</span>
                            {% else %}
                              <span class="price-regular">{{ item.final_line_price | money }}</span>
                            {% endif %}
                          </div>
                          {% if item.quantity > 1 %}
                            <div class="cart-item-unit-price">{{ item.final_price | money }} each</div>
                          {% endif %}
                        </div>
                      </div>

                      <!-- Save for Later -->
                      <div class="cart-item-actions">
                        <button type="button" 
                                class="btn-link save-later-btn"
                                data-action="save-for-later"
                                data-variant-id="{{ item.variant.id }}">
                          <i data-lucide="heart" class="btn-icon"></i>
                          Save for Later
                        </button>
                      </div>
                    </div>
                  </div>
                {% endfor %}
              </div>
              
              <!-- Cart Notes -->
              {% if settings.enable_cart_notes %}
                <div class="cart-notes">
                  <label for="cart-note" class="cart-note-label">
                    <i data-lucide="message-circle" class="note-icon"></i>
                    Special instructions for seller
                  </label>
                  <textarea 
                    name="note" 
                    id="cart-note" 
                    form="cart-form"
                    class="cart-note-input"
                    placeholder="Add any special requests or delivery instructions..."
                    rows="3">{{ cart.note }}</textarea>
                </div>
              {% endif %}
              
              <!-- Update Cart Button -->
              <div class="cart-update-actions">
                <button type="submit" name="update" class="btn-secondary cart-update-btn">
                  <i data-lucide="refresh-cw" class="btn-icon"></i>
                  Update Cart
                </button>
              </div>
            </form>

            <!-- Continue Shopping -->
            <div class="continue-shopping">
              <a href="{{ collections.all.url }}" class="btn-secondary">
                <i data-lucide="arrow-left" class="btn-icon"></i>
                Continue Shopping
              </a>
            </div>
          </div>

          <!-- Cart Summary Section -->
          <div class="cart-summary-section">
            <div class="cart-summary sticky-summary">
              <h2 class="summary-title">Order Summary</h2>
              
              <!-- Pricing Breakdown -->
              <div class="summary-pricing">
                <div class="summary-line">
                  <span>Subtotal ({{ cart.item_count }} items)</span>
                  <span>{{ cart.items_subtotal_price | money }}</span>
                </div>

                {% if cart.cart_level_discount_applications.size > 0 %}
                  {% for discount_application in cart.cart_level_discount_applications %}
                    <div class="summary-line discount-line">
                      <span>{{ discount_application.title }}</span>
                      <span>-{{ discount_application.total_allocated_amount | money }}</span>
                    </div>
                  {% endfor %}
                {% endif %}

                <!-- Shipping Calculator -->
                <div class="summary-line shipping-line">
                  <span>Shipping</span>
                  <span class="shipping-calculator">
                    <button type="button" class="btn-link" data-action="calculate-shipping">
                      Calculate
                      <i data-lucide="calculator" class="btn-icon"></i>
                    </button>
                  </span>
                </div>

                                 <!-- Free Shipping Progress -->
                 {% assign free_shipping_threshold = 150000 %} 
                 {% assign remaining_for_free_shipping = free_shipping_threshold | minus: cart.total_price %}
                 {% if remaining_for_free_shipping > 0 %}
                   <div class="free-shipping-progress">
                     <div class="progress-bar">
                       <div class="progress-fill" style="width: {{ cart.total_price | times: 100 | divided_by: free_shipping_threshold }}%"></div>
                     </div>
                     <p class="progress-text">
                       Add {{ remaining_for_free_shipping | money }} more for <strong>free shipping!</strong>
                     </p>
                   </div>
                 {% else %}
                   <div class="free-shipping-achieved">
                     <i data-lucide="check-circle" class="success-icon"></i>
                     <span>You qualify for free shipping!</span>
                   </div>
                 {% endif %}

                <!-- Tax Notice -->
                <div class="summary-note">
                  <i data-lucide="info" class="note-icon"></i>
                  <span>Tax calculated at checkout</span>
                </div>

                <!-- Total -->
                <div class="summary-total">
                  <span>Total</span>
                  <span class="total-price">{{ cart.total_price | money }}</span>
                </div>
              </div>

              <!-- Trust Indicators -->
              <div class="trust-indicators">
                <div class="trust-item">
                  <i data-lucide="shield-check" class="trust-icon"></i>
                  <span>Secure checkout</span>
                </div>
                                 <div class="trust-item">
                   <i data-lucide="truck" class="trust-icon"></i>
                   <span>Free shipping over ₱1,500</span>
                 </div>
                <div class="trust-item">
                  <i data-lucide="refresh-cw" class="trust-icon"></i>
                  <span>Easy returns</span>
                </div>
              </div>

                             <!-- Checkout Button -->
               <div class="checkout-actions">
                 <form action="{{ routes.cart_url }}" method="post" class="checkout-form">
                   <button type="submit" 
                           name="checkout"
                           class="btn-checkout"
                           {% if cart.item_count == 0 %}disabled{% endif %}>
                     <i data-lucide="lock" class="btn-icon"></i>
                     Secure Checkout
                     <span class="checkout-price">{{ cart.total_price | money }}</span>
                   </button>
                 </form>

                                 <!-- Express Checkout Options -->
                 <div class="express-checkout">
                   <div class="express-divider">
                     <span>or pay with</span>
                   </div>
                   <div class="express-buttons">
                     {% comment %} Add payment buttons here {% endcomment %}
                     <button class="express-payment-btn gcash-btn">
                       <span>GCash</span>
                     </button>
                     <button class="express-payment-btn paymaya-btn">
                       <span>PayMaya</span>
                     </button>
                     <button class="express-payment-btn card-btn">
                       <span>💳 Card</span>
                     </button>
                   </div>
                 </div>
              </div>

              <!-- Security Badges -->
              <div class="security-badges">
                <p class="security-text">
                  <i data-lucide="lock" class="security-icon"></i>
                  Your information is protected by 256-bit SSL encryption
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    {% endif %}

    <!-- Floating Cart Summary (Mobile) -->
    <div class="floating-cart-summary" id="floating-summary">
      <div class="floating-summary-content">
        <div class="floating-summary-info">
          <span class="floating-total">{{ cart.total_price | money }}</span>
          <span class="floating-count">{{ cart.item_count }} items</span>
        </div>
                 <form action="{{ routes.cart_url }}" method="post" style="display: contents;">
           <button type="submit" 
                   name="checkout"
                   class="floating-checkout-btn"
                   {% if cart.item_count == 0 %}disabled{% endif %}>
             Checkout
           </button>
         </form>
      </div>
    </div>
  </div>
</section>

<style>
  /* Typography System */
  :root {
    /* Typography Scale */
    --font-size-xs: 0.75rem;      /* 12px */
    --font-size-sm: 0.875rem;     /* 14px */
    --font-size-base: 1rem;       /* 16px */
    --font-size-lg: 1.125rem;     /* 18px */
    --font-size-xl: 1.25rem;      /* 20px */
    --font-size-2xl: 1.5rem;      /* 24px */
    --font-size-3xl: 1.875rem;    /* 30px */
    --font-size-4xl: 2.25rem;     /* 36px */
    
    /* Line Heights */
    --line-height-tight: 1.25;
    --line-height-normal: 1.5;
    --line-height-relaxed: 1.75;
    
    /* Letter Spacing */
    --letter-spacing-tight: -0.025em;
    --letter-spacing-normal: 0;
    --letter-spacing-wide: 0.025em;
    
    /* Font Weights */
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    
    /* Colors */
    --color-primary: #2c1810;
    --color-secondary: #666;
    --color-accent: #E6983B;
    --color-accent-blue: #5CBFEE;
    --color-success: #10b981;
    --color-error: #ef4444;
    --color-background: #ffffff;
    --color-surface: #f8f9fa;
    --color-border: #e5e5e5;
    
    /* Spacing Scale */
    --space-1: 0.25rem;   /* 4px */
    --space-2: 0.5rem;    /* 8px */
    --space-3: 0.75rem;   /* 12px */
    --space-4: 1rem;      /* 16px */
    --space-5: 1.25rem;   /* 20px */
    --space-6: 1.5rem;    /* 24px */
    --space-8: 2rem;      /* 32px */
    --space-10: 2.5rem;   /* 40px */
    --space-12: 3rem;     /* 48px */
    --space-16: 4rem;     /* 64px */
    
    /* Border Radius */
    --radius-sm: 0.375rem;  /* 6px */
    --radius-md: 0.5rem;    /* 8px */
    --radius-lg: 0.75rem;   /* 12px */
    --radius-xl: 1rem;      /* 16px */
    --radius-2xl: 1.5rem;   /* 24px */
    
    /* Shadows */
    --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
    --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
    --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
    --shadow-xl: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
  }

  /* Cart Page Styles - 2025 UX Best Practices */
  .cart-page {
    background: linear-gradient(135deg, var(--color-background) 0%, var(--color-surface) 50%, #fef9e7 100%);
    min-height: 90vh;
    padding: var(--space-10) 0;
    position: relative;
    overflow: hidden;
  }

  .cart-page::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: 
      radial-gradient(circle at 10% 20%, rgba(92, 191, 238, 0.08) 0%, transparent 50%),
      radial-gradient(circle at 90% 80%, rgba(230, 152, 59, 0.06) 0%, transparent 50%);
    pointer-events: none;
    z-index: 0;
  }

  .container {
    max-width: 1400px;
    margin: 0 auto;
    padding: 0 var(--space-5);
  }
  
  @media (min-width: 768px) {
    .container {
      padding: 0 var(--space-8);
    }
  }

  /* Empty Cart State */
  .empty-cart {
    text-align: center;
    max-width: 600px;
    margin: 0 auto;
    padding: 60px 20px;
  }

  .empty-cart-content {
    background: white;
    border-radius: 24px;
    padding: 60px 40px;
    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
    margin-bottom: 60px;
  }

  .empty-cart-icon {
    width: 120px;
    height: 120px;
    margin: 0 auto 32px;
    background: linear-gradient(135deg, #5CBFEE 0%, #4a9fd1 100%);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .empty-cart-icon .cart-icon {
    width: 60px;
    height: 60px;
    color: white;
  }

  .empty-cart-title {
    font-family: 'Special Gothic Expanded One', sans-serif;
    font-size: var(--font-size-4xl);
    font-weight: var(--font-weight-bold);
    color: var(--color-primary);
    line-height: var(--line-height-tight);
    letter-spacing: var(--letter-spacing-tight);
    margin-bottom: var(--space-4);
  }

  .empty-cart-message {
    font-family: 'Poppins', sans-serif;
    font-size: var(--font-size-lg);
    font-weight: var(--font-weight-normal);
    color: var(--color-secondary);
    line-height: var(--line-height-relaxed);
    margin-bottom: var(--space-10);
  }

  .empty-cart-actions {
    display: flex;
    gap: 16px;
    justify-content: center;
    flex-wrap: wrap;
  }

  /* Cart with Items */
  .cart-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--space-10);
    padding-bottom: var(--space-5);
    border-bottom: 1px solid var(--color-border);
  }

  .cart-title {
    font-family: 'Special Gothic Expanded One', sans-serif;
    font-size: var(--font-size-4xl);
    font-weight: var(--font-weight-bold);
    color: var(--color-primary);
    line-height: var(--line-height-tight);
    letter-spacing: var(--letter-spacing-tight);
    margin: 0;
  }

  /* Cart count styling moved to css-variables.liquid for consistency */

  .cart-actions {
    display: flex;
    gap: 24px;
  }

  .cart-layout {
    display: grid;
    grid-template-columns: 1fr 400px;
    gap: var(--space-16);
    align-items: start;
  }
  
  @media (max-width: 1024px) {
    .cart-layout {
      grid-template-columns: 1fr;
      gap: var(--space-10);
    }
  }

  /* Cart Items */
  .cart-items {
    display: flex;
    flex-direction: column;
    gap: 24px;
  }

  .cart-item {
    background: var(--color-background);
    border-radius: var(--radius-xl);
    padding: var(--space-6);
    box-shadow: var(--shadow-md);
    border: 1px solid var(--color-border);
    display: grid;
    grid-template-columns: 120px 1fr;
    gap: var(--space-5);
    transition: all 0.3s ease;
  }

  .cart-item:hover {
    box-shadow: var(--shadow-lg);
    transform: translateY(-2px);
    border-color: var(--color-accent-blue);
  }

  .cart-item-image {
    aspect-ratio: 1 / 1;
    overflow: hidden;
    border-radius: 12px;
  }

  .cart-item-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 12px;
  }

  .cart-item-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 8px;
  }

  .cart-item-title {
    font-family: 'Poppins', sans-serif;
    font-size: var(--font-size-xl);
    font-weight: var(--font-weight-semibold);
    color: var(--color-primary);
    margin: 0;
    line-height: var(--line-height-tight);
  }

  .cart-item-title a {
    color: inherit;
    text-decoration: none;
    transition: color 0.3s ease;
  }

  .cart-item-title a:hover {
    color: var(--color-accent-blue);
  }

  .cart-item-remove {
    background: none;
    border: none;
    color: #999;
    cursor: pointer;
    padding: 4px;
    border-radius: 50%;
    transition: all 0.3s ease;
  }

  .cart-item-remove:hover {
    background: #ff4757;
    color: white;
    transform: scale(1.1);
  }

  .cart-item-variant {
    font-family: 'Poppins', sans-serif;
    font-size: var(--font-size-sm);
    font-weight: var(--font-weight-medium);
    color: var(--color-secondary);
    margin-bottom: var(--space-2);
    margin-top: var(--space-1);
  }

  .cart-item-controls {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: var(--space-4);
    padding-top: var(--space-3);
    border-top: 1px solid #f0f0f0;
  }

  .quantity-controls {
    display: flex;
    align-items: center;
    border: 1px solid var(--color-border);
    border-radius: var(--radius-md);
    overflow: hidden;
    background: var(--color-background);
  }

  .quantity-btn {
    background: var(--color-background);
    border: none;
    width: 44px;
    height: 44px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    color: var(--color-primary);
    font-weight: var(--font-weight-medium);
  }

  .quantity-btn:hover {
    background: var(--color-accent);
    color: white;
  }

  .quantity-btn:active {
    transform: scale(0.95);
  }

  .quantity-input {
    width: 64px;
    height: 44px;
    border: none;
    text-align: center;
    font-family: 'Poppins', sans-serif;
    font-size: var(--font-size-base);
    font-weight: var(--font-weight-semibold);
    background: var(--color-background);
    border-left: 1px solid var(--color-border);
    border-right: 1px solid var(--color-border);
    color: var(--color-primary);
  }

  .quantity-input:focus {
    outline: none;
    background: #f8f9fa;
  }

  .quantity-icon {
    width: 16px;
    height: 16px;
    stroke-width: 2;
    color: inherit;
  }

  .quantity-fallback {
    font-size: var(--font-size-lg);
    font-weight: var(--font-weight-bold);
    line-height: 1;
    display: none;
  }

  .cart-item-pricing {
    text-align: right;
  }

  .cart-item-price {
    font-family: 'Poppins', sans-serif;
    font-size: var(--font-size-xl);
    font-weight: var(--font-weight-bold);
    color: var(--color-primary);
    margin-bottom: var(--space-1);
    line-height: var(--line-height-tight);
  }

  .price-regular {
    color: var(--color-primary);
    font-weight: var(--font-weight-bold);
    text-decoration: none !important;
  }

  .price-sale {
    color: var(--color-error);
    margin-right: var(--space-2);
    font-weight: var(--font-weight-bold);
    text-decoration: none !important;
  }

  .price-compare {
    color: var(--color-secondary);
    text-decoration: line-through;
    font-size: var(--font-size-base);
    font-weight: var(--font-weight-normal);
    opacity: 0.7;
  }

  .cart-item-unit-price {
    font-family: 'Poppins', sans-serif;
    font-size: var(--font-size-sm);
    font-weight: var(--font-weight-medium);
    color: var(--color-secondary);
  }

  .cart-item-actions {
    margin-top: 12px;
  }

  /* Cart Summary */
  .cart-summary-section {
    position: relative;
  }

  .sticky-summary {
    position: sticky;
    top: 20px;
  }

  .cart-summary {
    background: var(--color-background);
    border-radius: var(--radius-2xl);
    padding: var(--space-8);
    box-shadow: var(--shadow-lg);
    border: 1px solid var(--color-border);
  }

  .summary-title {
    font-family: 'Special Gothic Expanded One', sans-serif;
    font-size: var(--font-size-3xl);
    font-weight: var(--font-weight-bold);
    color: var(--color-primary);
    line-height: var(--line-height-tight);
    letter-spacing: var(--letter-spacing-tight);
    margin-bottom: var(--space-6);
    text-align: center;
  }

  .summary-pricing {
    margin-bottom: 32px;
  }

  .summary-line {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: var(--space-3) 0;
    font-family: 'Poppins', sans-serif;
    font-size: var(--font-size-base);
    font-weight: var(--font-weight-medium);
    color: var(--color-primary);
    line-height: var(--line-height-normal);
  }

  .summary-line:not(:last-child) {
    border-bottom: 1px solid #f0f0f0;
  }

  .summary-line span:last-child {
    font-weight: var(--font-weight-semibold);
  }

  .discount-line {
    background: linear-gradient(-45deg, #FF6B6B, #FF8E53, #FF6B35, #F7DC6F, #82E0AA, #85C1E9, #BB8FCE, #FF6B6B);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    font-weight: 600;
  }

  .summary-total {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: var(--space-5) 0;
    border-top: 2px solid var(--color-border);
    margin-top: var(--space-4);
    font-family: 'Poppins', sans-serif;
    font-size: var(--font-size-2xl);
    font-weight: var(--font-weight-bold);
    color: var(--color-primary);
    line-height: var(--line-height-tight);
  }

  .summary-note {
    display: flex;
    align-items: center;
    gap: var(--space-2);
    padding: var(--space-3) 0;
    font-family: 'Poppins', sans-serif;
    font-size: var(--font-size-sm);
    font-weight: var(--font-weight-medium);
    color: var(--color-secondary);
    line-height: var(--line-height-normal);
    border-bottom: 1px solid #f0f0f0;
  }

  .free-shipping-progress {
    margin: 16px 0;
  }

  .progress-bar {
    width: 100%;
    height: 8px;
    background: #f0f0f0;
    border-radius: 4px;
    overflow: hidden;
    margin-bottom: 8px;
  }

  .progress-fill {
    height: 100%;
    background: linear-gradient(-45deg, #FF6B6B, #FF8E53, #FF6B35, #F7DC6F, #82E0AA, #85C1E9, #BB8FCE, #FF6B6B);
    background-size: 400% 400%;
    animation: gradientFlow 6s ease infinite;
    border-radius: 4px;
    transition: width 0.3s ease;
  }

  @keyframes gradientFlow {
    0%, 100% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
  }

  .progress-text {
    font-family: 'Poppins', sans-serif;
    font-size: 0.9rem;
    color: #666;
    text-align: center;
  }

  .free-shipping-achieved {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 12px 16px;
    background: #d4edda;
    border-radius: 8px;
    color: #155724;
    font-family: 'Poppins', sans-serif;
    font-weight: 600;
    margin: 16px 0;
  }

  .trust-indicators {
    margin: 24px 0;
    padding: 20px 0;
    border-top: 1px solid #f0f0f0;
    border-bottom: 1px solid #f0f0f0;
  }

  .trust-item {
    display: flex;
    align-items: center;
    gap: 8px;
    margin-bottom: 8px;
    font-family: 'Poppins', sans-serif;
    font-size: 0.9rem;
    color: #666;
  }

  .trust-icon {
    width: 16px;
    height: 16px;
    background: linear-gradient(-45deg, #FF6B6B, #FF8E53, #FF6B35, #F7DC6F, #82E0AA, #85C1E9, #BB8FCE, #FF6B6B);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .btn-checkout {
    width: 100%;
    background: linear-gradient(135deg, var(--color-accent) 0%, #d18a35 100%);
    color: white;
    border: none;
    border-radius: var(--radius-xl);
    padding: var(--space-5) var(--space-6);
    font-family: 'Poppins', sans-serif;
    font-size: var(--font-size-lg);
    font-weight: var(--font-weight-semibold);
    line-height: var(--line-height-normal);
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--space-3);
    margin-bottom: var(--space-4);
    min-height: 56px;
  }

  .btn-checkout:hover {
    transform: translateY(-1px);
    box-shadow: var(--shadow-xl);
  }

  .btn-checkout:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none;
  }

  .checkout-price {
    font-weight: var(--font-weight-bold);
    margin-left: auto;
    font-size: var(--font-size-xl);
  }

  /* Button System */
  .btn-primary {
    background: linear-gradient(135deg, var(--color-accent-blue) 0%, #4a9fd1 100%);
    color: white;
    border: none;
    border-radius: var(--radius-lg);
    padding: var(--space-3) var(--space-6);
    font-family: 'Poppins', sans-serif;
    font-size: var(--font-size-base);
    font-weight: var(--font-weight-semibold);
    line-height: var(--line-height-normal);
    text-decoration: none;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: var(--space-2);
    cursor: pointer;
    transition: all 0.3s ease;
    min-height: 44px;
  }

  .btn-primary:hover {
    transform: translateY(-1px);
    box-shadow: var(--shadow-lg);
    text-decoration: none;
    color: white;
  }

  .btn-secondary {
    background: var(--color-background);
    color: var(--color-primary);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-lg);
    padding: var(--space-3) var(--space-6);
    font-family: 'Poppins', sans-serif;
    font-size: var(--font-size-base);
    font-weight: var(--font-weight-semibold);
    line-height: var(--line-height-normal);
    text-decoration: none;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: var(--space-2);
    cursor: pointer;
    transition: all 0.3s ease;
    min-height: 44px;
  }

  .btn-secondary:hover {
    background: var(--color-primary);
    color: white;
    border-color: var(--color-primary);
    transform: translateY(-1px);
    text-decoration: none;
  }

  .btn-link {
    background: none;
    border: none;
    color: var(--color-accent-blue);
    font-family: 'Poppins', sans-serif;
    font-size: var(--font-size-sm);
    font-weight: var(--font-weight-semibold);
    cursor: pointer;
    display: inline-flex;
    align-items: center;
    gap: var(--space-2);
    transition: all 0.3s ease;
    text-decoration: none;
    padding: var(--space-2) 0;
  }

  .btn-link:hover {
    color: #4a9fd1;
    text-decoration: underline;
  }

     .btn-icon {
     width: 16px;
     height: 16px;
   }

   /* Express Checkout Styles */
   .express-checkout {
     margin: 20px 0;
   }

   .express-divider {
     text-align: center;
     margin: 16px 0;
     position: relative;
   }

   .express-divider::before {
     content: '';
     position: absolute;
     top: 50%;
     left: 0;
     right: 0;
     height: 1px;
     background: #e5e5e5;
     z-index: 1;
   }

   .express-divider span {
     background: white;
     padding: 0 16px;
     color: #666;
     font-family: 'Poppins', sans-serif;
     font-size: 0.9rem;
     position: relative;
     z-index: 2;
   }

   .express-buttons {
     display: grid;
     grid-template-columns: 1fr 1fr;
     gap: 8px;
     margin-top: 16px;
   }

   .express-payment-btn {
     background: var(--color-background);
     border: 1px solid var(--color-border);
     border-radius: var(--radius-lg);
     padding: var(--space-3) var(--space-4);
     font-family: 'Poppins', sans-serif;
     font-size: var(--font-size-base);
     font-weight: var(--font-weight-semibold);
     line-height: var(--line-height-normal);
     cursor: pointer;
     transition: all 0.3s ease;
     display: flex;
     align-items: center;
     justify-content: center;
     gap: var(--space-2);
     min-height: 48px;
   }

   .express-payment-btn:hover {
     border-color: var(--color-accent-blue);
     background: #f8f9ff;
     transform: translateY(-1px);
     box-shadow: var(--shadow-sm);
   }

   .gcash-btn {
     color: #007bff;
   }

   .paymaya-btn {
     color: #00d4ff;
   }

   .card-btn {
     color: #2c1810;
     grid-column: 1 / -1;
   }

  /* Cart Notes */
  .cart-notes {
    margin: 32px 0;
    padding: 24px;
    background: #f8f9fa;
    border-radius: 12px;
    border: 1px solid #e5e5e5;
  }

  .cart-note-label {
    display: flex;
    align-items: center;
    gap: 8px;
    font-family: 'Poppins', sans-serif;
    font-weight: 600;
    color: #2c1810;
    margin-bottom: 12px;
  }

  .note-icon {
    width: 16px;
    height: 16px;
    color: var(--color-accent-blue);
    flex-shrink: 0;
  }

  .cart-note-input {
    width: 100%;
    padding: 12px 16px;
    border: 2px solid #e5e5e5;
    border-radius: 8px;
    font-family: 'Poppins', sans-serif;
    font-size: 1rem;
    resize: vertical;
    transition: border-color 0.3s ease;
  }

  .cart-note-input:focus {
    outline: none;
    border-color: #5CBFEE;
  }

  .cart-update-actions {
    margin-top: 24px;
    text-align: center;
  }

  .cart-update-btn {
    background: white;
    color: #2c1810;
    border: 2px solid #2c1810;
    border-radius: 8px;
    padding: 12px 24px;
    font-family: 'Poppins', sans-serif;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    display: inline-flex;
    align-items: center;
    gap: 8px;
  }

  .cart-update-btn:hover {
    background: #2c1810;
    color: white;
  }

  /* Continue Shopping */
  .continue-shopping {
    margin-top: 40px;
    text-align: center;
  }

  /* Floating Cart Summary (Mobile) */
  .floating-cart-summary {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    background: var(--color-background);
    border-top: 1px solid var(--color-border);
    padding: var(--space-4) var(--space-5);
    box-shadow: var(--shadow-xl);
    z-index: 1000;
    display: none;
  }

  .floating-summary-content {
    display: flex;
    justify-content: space-between;
    align-items: center;
    max-width: 1400px;
    margin: 0 auto;
  }

  .floating-summary-info {
    display: flex;
    flex-direction: column;
  }

  .floating-total {
    font-family: 'Poppins', sans-serif;
    font-size: var(--font-size-xl);
    font-weight: var(--font-weight-bold);
    color: var(--color-primary);
  }

  .floating-count {
    font-family: 'Poppins', sans-serif;
    font-size: var(--font-size-sm);
    font-weight: var(--font-weight-medium);
    color: var(--color-secondary);
  }

       .floating-checkout-btn {
       background: #E6983B;
       color: white;
       border: none;
       border-radius: 8px;
       padding: 12px 24px;
       font-family: 'Poppins', sans-serif;
       font-weight: 600;
       cursor: pointer;
       transition: all 0.3s ease;
     }

     .floating-checkout-btn:hover {
       background: #d18a35;
       transform: translateY(-1px);
     }

     /* Enhanced Toast Notifications */
     .cart-toast {
       position: fixed;
       top: 20px;
       right: 20px;
       background: rgba(255, 255, 255, 0.95);
       backdrop-filter: blur(20px);
       -webkit-backdrop-filter: blur(20px);
       color: #1a1a1a;
       border-radius: 16px;
       box-shadow: 0 8px 32px rgba(0, 0, 0, 0.12);
       border: 1px solid rgba(0, 0, 0, 0.08);
       transform: translateX(calc(100% + 40px));
       transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
       z-index: 10000;
       max-width: 320px;
       min-width: 280px;
       font-family: 'Poppins', sans-serif;
     }

     .cart-toast.visible {
       transform: translateX(0);
     }

     .toast-content {
       display: flex;
       align-items: center;
       gap: 12px;
       padding: 16px 20px;
     }

     .toast-icon {
       flex-shrink: 0;
       width: 24px;
       height: 24px;
       display: flex;
       align-items: center;
       justify-content: center;
       position: relative;
     }

     .toast-lucide-icon {
       width: 20px;
       height: 20px;
       stroke-width: 2;
     }

     .toast-fallback-icon {
       font-size: 18px;
       font-weight: 700;
       line-height: 1;
       display: none;
     }

     .toast-message {
       flex: 1;
       font-size: 0.95rem;
       font-weight: 500;
       line-height: 1.4;
     }

     /* Toast Type Styling */
     .cart-toast-success {
       border-left: 4px solid transparent;
       border-image: linear-gradient(-45deg, #FF6B6B, #FF8E53, #FF6B35, #F7DC6F, #82E0AA, #85C1E9, #BB8FCE, #FF6B6B) 1;
     }

     .cart-toast-success .toast-icon {
       background: linear-gradient(-45deg, #FF6B6B, #FF8E53, #FF6B35, #F7DC6F, #82E0AA, #85C1E9, #BB8FCE, #FF6B6B);
       -webkit-background-clip: text;
       -webkit-text-fill-color: transparent;
       background-clip: text;
     }

     .cart-toast-error {
       border-left: 4px solid #dc3545;
     }

     .cart-toast-error .toast-icon {
       color: #dc3545;
     }

     .cart-toast-info {
       border-left: 4px solid #5CBFEE;
     }

     .cart-toast-info .toast-icon {
       color: #5CBFEE;
     }

     /* Animation for icon */
     .cart-toast.visible .toast-icon {
       animation: toastIconPop 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55);
     }

     @keyframes toastIconPop {
       0% {
         transform: scale(0) rotate(-180deg);
         opacity: 0;
       }
       50% {
         transform: scale(1.2) rotate(-90deg);
       }
       100% {
         transform: scale(1) rotate(0deg);
         opacity: 1;
       }
     }

     /* Button interaction states */
     .quantity-btn:active {
       transform: scale(0.9);
     }

  /* Responsive Design */
  @media screen and (max-width: 1024px) {
    .cart-layout {
      grid-template-columns: 1fr;
      gap: 40px;
    }

    .cart-summary-section {
      order: -1;
    }

    .sticky-summary {
      position: static;
    }

    .floating-cart-summary {
      display: block;
    }
  }

  @media screen and (max-width: 768px) {
    .cart-page {
      padding: var(--space-5) 0;
    }

    .cart-header {
      flex-direction: column;
      align-items: flex-start;
      gap: var(--space-4);
      margin-bottom: var(--space-8);
    }

    .cart-title {
      font-size: var(--font-size-3xl);
    }

    /* Cart count styling handled by css-variables.liquid */

    .cart-actions {
      width: 100%;
      justify-content: flex-end;
      gap: var(--space-4);
    }

    .cart-item {
      grid-template-columns: 100px 1fr;
      gap: var(--space-4);
      padding: var(--space-5);
    }

    .cart-item-title {
      font-size: var(--font-size-lg);
    }

    .cart-item-controls {
      flex-direction: column;
      align-items: flex-start;
      gap: var(--space-3);
    }

    .cart-item-pricing {
      text-align: left;
    }

    .cart-summary {
      padding: var(--space-6);
    }

    .summary-title {
      font-size: var(--font-size-2xl);
    }

    .empty-cart-content {
      padding: var(--space-10) var(--space-6);
    }

    .empty-cart-title {
      font-size: var(--font-size-3xl);
    }

    .empty-cart-actions {
      flex-direction: column;
      align-items: center;
      gap: var(--space-3);
    }

    .empty-cart-actions .btn-primary,
    .empty-cart-actions .btn-secondary {
      width: 100%;
      justify-content: center;
    }

   /* Empty Cart Recommendations */
   .empty-cart-recommendations {
     margin-top: 40px;
   }

   .empty-cart-recommendations h2 {
     font-family: 'Special Gothic Expanded One', sans-serif;
     font-size: 1.8rem;
     color: #2c1810;
     text-align: center;
     margin-bottom: 32px;
   }

   .recommendations-grid {
     display: grid;
     grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
     gap: 24px;
     max-width: 800px;
     margin: 0 auto;
   }

   .recommendation-card {
     background: white;
     border-radius: 16px;
     padding: 20px;
     box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);
     transition: all 0.3s ease;
   }

   .recommendation-card:hover {
     transform: translateY(-4px);
     box-shadow: 0 8px 32px rgba(0, 0, 0, 0.12);
   }

   .recommendation-link {
     text-decoration: none;
     color: inherit;
   }

   .recommendation-image {
     margin-bottom: 16px;
   }

   .recommendation-image {
     aspect-ratio: 1 / 1;
     overflow: hidden;
     border-radius: 8px;
   }

   .recommendation-image img {
     width: 100%;
     height: 100%;
     object-fit: cover;
     border-radius: 8px;
   }

   .recommendation-title {
     font-family: 'Poppins', sans-serif;
     font-size: 1rem;
     font-weight: 600;
     color: #2c1810;
     margin-bottom: 8px;
     line-height: 1.3;
   }

   .recommendation-price {
     font-family: 'Poppins', sans-serif;
     font-size: 1.1rem;
     font-weight: 700;
     color: #5CBFEE;
   }
  }

  @media screen and (max-width: 480px) {
    .cart-title {
      font-size: var(--font-size-3xl);
    }

    /* Cart count styling handled by css-variables.liquid */

    .cart-item {
      grid-template-columns: 1fr;
      text-align: center;
      padding: var(--space-4);
    }

    .cart-item-header {
      flex-direction: column;
      align-items: center;
      gap: var(--space-2);
    }

    .cart-item-title {
      font-size: var(--font-size-base);
    }

    .cart-item-controls {
      align-items: center;
    }

    .cart-item-pricing {
      text-align: center;
    }

    .cart-summary {
      padding: var(--space-4);
    }

    .summary-title {
      font-size: var(--font-size-xl);
    }

    .btn-checkout {
      font-size: var(--font-size-base);
      padding: var(--space-4) var(--space-5);
    }

    .checkout-price {
      font-size: var(--font-size-lg);
    }
  }

  /* Security Badges */
  .security-badges {
    margin-top: var(--space-6);
    padding-top: var(--space-4);
    border-top: 1px solid var(--color-border);
  }

  .security-text {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--space-2);
    margin: 0;
    font-family: 'Poppins', sans-serif;
    font-size: var(--font-size-xs);
    font-weight: var(--font-weight-medium);
    color: var(--color-secondary);
    line-height: var(--line-height-normal);
    text-align: center;
  }

  .security-icon {
    width: 14px;
    height: 14px;
    color: var(--color-success);
    flex-shrink: 0;
  }

  /* Pulse animation for update button */
  @keyframes pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.05); }
    100% { transform: scale(1); }
  }

  /* Loading and notification styles */
  .cart-updating {
    position: relative;
    opacity: 0.7;
    pointer-events: none;
  }

  .cart-updating::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 30px;
    height: 30px;
    margin: -15px 0 0 -15px;
    border: 2px solid #f3f3f3;
    border-top: 2px solid #333;
    border-radius: 50%;
    animation: spin 1s linear infinite;
    z-index: 1000;
  }

  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  .cart-notification {
    padding: 1rem;
    margin-bottom: 1rem;
    border-radius: 0.375rem;
    font-weight: 500;
    display: none;
  }

  .cart-notification--success {
    background-color: #d1fae5;
    color: #065f46;
    border: 1px solid #a7f3d0;
  }

  .cart-notification--error {
    background-color: #fee2e2;
    color: #991b1b;
    border: 1px solid #fca5a5;
  }

  .cart-notification--info {
    background-color: #dbeafe;
    color: #1e40af;
    border: 1px solid #93c5fd;
  }

  /* Ensure buttons don't interfere with form submission */
  .quantity-btn, .cart-item-remove {
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
    border-radius: 0.25rem;
    transition: background-color 0.2s;
  }

  .quantity-btn:hover, .cart-item-remove:hover {
    background-color: rgba(0, 0, 0, 0.05);
  }

  .quantity-btn:disabled, .cart-item-remove:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  /* Improved quantity input styling */
  .quantity-input {
    text-align: center;
    border: 1px solid #d1d5db;
    border-radius: 0.25rem;
    padding: 0.5rem;
    width: 4rem;
    font-weight: 500;
    transition: all 0.2s ease;
  }

  .quantity-input:focus {
    outline: 2px solid #3b82f6;
    outline-offset: 2px;
    border-color: #3b82f6;
  }

  /* Cart updating state */
  .cart-updating {
    pointer-events: none;
    position: relative;
  }

  .cart-updating::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(255, 255, 255, 0.7);
    z-index: 10;
    pointer-events: none;
  }

  /* Smooth transitions for quantity buttons */
  .quantity-btn {
    transition: transform 0.1s ease, opacity 0.2s ease;
  }

  .quantity-btn:active {
    transform: scale(0.9);
  }

  /* Cart item animations */
  .cart-item {
    transition: opacity 0.3s ease, transform 0.3s ease;
  }

  .cart-item.removing {
    opacity: 0;
    transform: translateX(-100%);
  }
</style>

<script>
/**
 * Simple Cart Manager - No conflicts approach
 * Uses basic fetch API with standard Shopify cart endpoints
 */
(function() {
  'use strict';
  
  console.log('🛒 Initializing simple cart manager...');
  
  let isUpdating = false;
  
  // Initialize on page load
  document.addEventListener('DOMContentLoaded', function() {
    // Prevent any existing cart managers from interfering
    window.cartPageUpdating = false;
    
    initializeCartHandlers();
    console.log('✅ Simple cart manager ready');
  });
  
  function initializeCartHandlers() {
    // Handle all cart interactions using event delegation
    document.addEventListener('click', function(e) {
      if (isUpdating) {
        e.preventDefault();
        e.stopPropagation();
        return;
      }
      
      // Handle quantity buttons
      if (e.target.closest('.quantity-btn')) {
        e.preventDefault();
        e.stopPropagation();
        handleQuantityButton(e.target.closest('.quantity-btn'));
        return;
      }
      
      // Handle remove buttons
      if (e.target.closest('[data-action="remove-item"]')) {
        e.preventDefault();
        e.stopPropagation();
        handleRemoveItem(e.target.closest('[data-action="remove-item"]'));
        return;
      }
      
      // Handle clear cart
      if (e.target.closest('[data-action="clear-cart"]')) {
        e.preventDefault();
        e.stopPropagation();
        handleClearCart();
        return;
      }
    });
    
    // Handle quantity input changes
    document.addEventListener('change', function(e) {
      if (e.target.classList.contains('quantity-input') && !isUpdating) {
        handleQuantityInput(e.target);
      }
    });
  }
  
  function handleQuantityButton(button) {
    const line = button.dataset.line;
    const action = button.dataset.action;
    const input = document.querySelector(`[data-line="${line}"].quantity-input`);
    
    if (!input || !line) return;
    
    const currentQty = parseInt(input.value) || 0;
    const newQty = action === 'increase-quantity' ? currentQty + 1 : Math.max(0, currentQty - 1);
    
    console.log(`📝 ${action} for line ${line}: ${currentQty} → ${newQty}`);
    
    // Update input immediately for visual feedback
    input.value = newQty;
    
    updateCartLine(line, newQty);
  }
  
  function handleQuantityInput(input) {
    const line = input.dataset.line;
    const newQty = Math.max(0, parseInt(input.value) || 0);
    
    console.log(`⌨️ Manual input for line ${line}: ${newQty}`);
    
    updateCartLine(line, newQty);
  }
  
  function handleRemoveItem(button) {
    const line = button.dataset.line;
    const cartItem = button.closest('.cart-item');
    const productTitle = cartItem?.querySelector('.cart-item-title a')?.textContent?.trim() || 'item';
    
    if (!confirm(`Remove ${productTitle} from your cart?`)) return;
    
    console.log(`🗑️ Removing item on line ${line}`);
    updateCartLine(line, 0);
  }
  
  function handleClearCart() {
    if (!confirm('Are you sure you want to clear your entire cart?')) return;
    
    console.log('🗑️ Clearing cart');
    
    isUpdating = true;
    showLoading(true);
    
    fetch('/cart/clear.js', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      }
    })
    .then(response => response.json())
    .then(() => {
      showNotification('Cart cleared', 'success');
      setTimeout(() => window.location.reload(), 1000);
    })
    .catch(error => {
      console.error('Clear cart error:', error);
      showNotification('Error clearing cart', 'error');
      setTimeout(() => window.location.reload(), 2000);
    })
    .finally(() => {
      isUpdating = false;
      showLoading(false);
    });
  }
  
  function updateCartLine(line, quantity) {
    if (isUpdating) return;
    
    isUpdating = true;
    showLoading(true);
    
    console.log(`🔄 Updating line ${line} to quantity ${quantity}`);
    
    fetch('/cart/change.js', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        line: parseInt(line),
        quantity: parseInt(quantity)
      })
    })
    .then(response => {
      if (!response.ok) {
        throw new Error(`HTTP ${response.status}`);
      }
      return response.json();
    })
    .then(cart => {
      console.log('✅ Cart update successful');
      
      if (quantity === 0) {
        showNotification('Item removed', 'success');
      } else {
        showNotification('Cart updated', 'success');
      }
      
      // Simple approach: reload the page to show updated cart
      // This prevents any DOM conflicts and ensures accuracy
      setTimeout(() => {
        window.location.reload();
      }, 1000);
    })
    .catch(error => {
      console.error('❌ Cart update failed:', error);
      showNotification('Update failed. Refreshing page...', 'error');
      
      // Restore input value and reload
      const input = document.querySelector(`[data-line="${line}"].quantity-input`);
      if (input) {
        // Restore to previous value by reloading
        setTimeout(() => window.location.reload(), 2000);
      }
    })
    .finally(() => {
      isUpdating = false;
      showLoading(false);
    });
  }
  
  function showLoading(show) {
    const cartSection = document.querySelector('.cart-page');
    if (!cartSection) return;
    
    if (show) {
      cartSection.classList.add('cart-updating');
      // Disable all interactive elements
      const controls = cartSection.querySelectorAll('button, input[type="number"], select');
      controls.forEach(control => {
        control.disabled = true;
        control.style.opacity = '0.6';
      });
    } else {
      cartSection.classList.remove('cart-updating');
      // Re-enable interactive elements
      const controls = cartSection.querySelectorAll('button, input[type="number"], select');
      controls.forEach(control => {
        control.disabled = false;
        control.style.opacity = '';
      });
    }
  }
  
  function showNotification(message, type = 'info') {
    // Remove any existing notifications
    const existing = document.querySelector('.simple-cart-notification');
    if (existing) existing.remove();
    
    // Create simple notification
    const notification = document.createElement('div');
    notification.className = 'simple-cart-notification';
    notification.textContent = message;
    
    // Style the notification
    const bgColor = type === 'success' ? '#10b981' : type === 'error' ? '#ef4444' : '#3b82f6';
    Object.assign(notification.style, {
      position: 'fixed',
      top: '20px',
      right: '20px',
      background: bgColor,
      color: 'white',
      padding: '12px 20px',
      borderRadius: '8px',
      fontFamily: 'Poppins, sans-serif',
      fontSize: '14px',
      fontWeight: '500',
      boxShadow: '0 4px 12px rgba(0, 0, 0, 0.15)',
      zIndex: '9999',
      maxWidth: '300px'
    });
    
    document.body.appendChild(notification);
    
    // Auto-hide after 3 seconds
    setTimeout(() => {
      if (notification.parentNode) {
        notification.remove();
      }
    }, 3000);
  }
  
  // Override any conflicting cart functions
  window.updateCartLine = updateCartLine;
  window.cartUpdating = () => isUpdating;
  
})();
</script>

{% schema %}
{
  "name": "Cart Page",
  "settings": [
    {
             "type": "number",
       "id": "free_shipping_threshold",
       "label": "Free Shipping Threshold (in cents)",
       "default": 150000,
       "info": "Amount required for free shipping in cents (150000 = ₱1,500)"
    },
    {
      "type": "checkbox",
      "id": "show_shipping_calculator",
      "label": "Show Shipping Calculator",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_save_for_later",
      "label": "Enable Save for Later",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_cart_notes",
      "label": "Enable Cart Notes",
      "default": true
    },
    {
      "type": "text",
      "id": "empty_cart_heading",
      "label": "Empty Cart Heading",
      "default": "Your cart is empty"
    },
    {
      "type": "textarea",
      "id": "empty_cart_message",
      "label": "Empty Cart Message",
      "default": "Looks like you haven't added any coffee to your cart yet. Let's find some amazing beans for you!"
    }
  ],
  "presets": [
    {
      "name": "Enhanced Cart Page"
    }
  ]
}
{% endschema %}
